apply plugin: 'java'
apply plugin: 'artifactory'
apply plugin: 'maven'
apply plugin: 'eclipse'

dependencies {
    compile gradleApi()

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
}

ext {
    sharedDir = file("${project.rootDir}/../shared")
}

sourceCompatibility = 1.7 //Java version compatibility to use when compiling Java source.
targetCompatibility = 1.7 //Java version to generate classes for.

buildscript { // artifacrory plugin
    repositories {
        if (project.hasProperty('repository')) {
            maven {
                name 'UserRepository'
                url project.repository
                if (project.hasProperty('repositoryAccount') && project.hasProperty('repositoryPassword')) {
                    credentials {
                        username project.repositoryAccount
                        password project.repositoryPassword
                    }
                }
            }
            jcenter()
        } else {
            maven { // for gradle fast plugin
                name 'Artifactory'
                url 'http://arti.exactpro.com/libs-release'
            }
        }
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.2.+')
        classpath(group: 'com.bmuschko', name: 'gradle-tomcat-plugin', version: '2.2.2')
    }
}

repositories {
    maven {
        name 'MavenLocal' // for local builds only
        url sharedDir
    }
    if (project.hasProperty('repository')) {
        maven {
            name 'UserRepository'
            url project.repository
            if (project.hasProperty('repositoryAccount') && project.hasProperty('repositoryPassword')) {
                credentials {
                    username project.repositoryAccount
                    password project.repositoryPassword
                }
            }
        }
        jcenter()
    } else {
        maven { // for gradle fast plugin
            name 'Artifactory'
            url 'http://arti.exactpro.com/libs-snapshot'
        }
    }
}

group = 'com.exactprosystems.testtools'
version = "2.6-dev-SNAPSHOT"

uploadArchives {
    repositories.mavenDeployer {
        uniqueVersion = false // publish non unique snapshots to local repository
        repository(url: "file://${sharedDir}")
        doLast {
            // Remove any invalid maven-metadata.xml files that may have been created
                // for SNAPSHOT versions that are *not* uniquely versioned.
                pom*.each { pom ->
                    if (pom.version.endsWith('-SNAPSHOT')) {
                        final File artifactDir = new File(rootProject.ext.sharedDir,
                                pom.groupId.replace('.', '/')
                                    + '/' + pom.artifactId
                                    + '/' + pom.version)
                            delete fileTree(dir: artifactDir, include: 'maven-metadata.xml*')
                        }
                    }
            }
        }
    doFirst { sharedDir.mkdirs() }
}
