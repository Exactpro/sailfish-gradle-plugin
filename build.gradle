apply plugin: 'java'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'groovy'

group = 'com.exactprosystems.testtools'
version = "${sailfish_version_major}.${sailfish_version_minor}-SNAPSHOT"
archivesBaseName = 'GradlePlugin'

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.24-incubating'

    
    compile 'commons-io:commons-io:1.4'
    compile 'com.google.guava:guava:18.0'
}

ext {
    sharedDir = file("${project.rootDir}/shared")
}

sourceCompatibility = 1.8 //Java version compatibility to use when compiling Java source.
targetCompatibility = 1.8 //Java version to generate classes for.

sourceSets {
    main {
        java {
            srcDirs = []
        }
        groovy {
            srcDirs = ['src/main/java', 'src/main/groovy']
        }
    }
}

buildscript { // artifacrory plugin
    repositories {
        if (project.hasProperty('repository')) {
            maven {
                name 'UserRepository'
                url project.repository
                if (project.hasProperty('repositoryAccount') && project.hasProperty('repositoryPassword')) {
                    credentials {
                        username project.repositoryAccount
                        password project.repositoryPassword
                    }
                }
            }
            jcenter()
        } else {
            maven { // for gradle fast plugin
                name 'Artifactory'
                url 'http://arti.exactpro.com/libs-release'
            }
        }
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.4.12')
        classpath(group: 'com.bmuschko', name: 'gradle-tomcat-plugin', version: '2.2.2')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
    distributionType = 'all'
}

repositories {
    maven {
        name 'MavenLocal' // for local builds only
        url sharedDir
    }
    if (project.hasProperty('repository')) {
        maven {
            name 'UserRepository'
            url project.repository
            if (project.hasProperty('repositoryAccount') && project.hasProperty('repositoryPassword')) {
                credentials {
                    username project.repositoryAccount
                    password project.repositoryPassword
                }
            }
        }
        jcenter()
    } else {
        maven { // for gradle fast plugin
            name 'Artifactory'
            url 'http://arti.exactpro.com/libs-snapshot'
        }
    }
}

artifactory {
    publish {
        defaults {
            // Reference to Gradle configurations defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publishConfigs('archives')
        }
    }
}

uploadArchives {
    repositories.mavenDeployer {
        uniqueVersion = false // publish non unique snapshots to local repository
        repository(url: "file://${sharedDir}")
        doLast {
            // Remove any invalid maven-metadata.xml files that may have been created
                // for SNAPSHOT versions that are *not* uniquely versioned.
                pom*.each { pom ->
                    if (pom.version.endsWith('-SNAPSHOT')) {
                        final File artifactDir = new File(rootProject.ext.sharedDir,
                                pom.groupId.replace('.', '/')
                                    + '/' + pom.artifactId
                                    + '/' + pom.version)
                            delete fileTree(dir: artifactDir, include: 'maven-metadata.xml*')
                    }
                }
        }
    }
}